{"version":3,"sources":["../../../src/middlewares/validation.middleware.ts"],"sourcesContent":["import { plainToInstance } from 'class-transformer';\nimport { validateOrReject, ValidationError } from 'class-validator';\nimport { NextFunction, Request, Response } from 'express';\nimport { HttpException } from '@/exceptions/HttpException';\nimport { capitalize } from '@/config/helper';\n\n/**\n * @name ValidationMiddleware\n * @description Middleware for validating request data using class-validator and class-transformer.\n * @param type Class type for data transformation and validation\n * @param skipMissingProperties Skip missing properties in validation\n * @param whitelist Whitelist only known properties for validation\n * @param forbidNonWhitelisted Throw an error when non-whitelisted properties are present\n */\nexport const ValidationMiddleware = (type: any, skipMissingProperties = false, whitelist = false, forbidNonWhitelisted = false) => {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    // Transform request body into the specified DTO type\n    const dto = plainToInstance(type, req.body);\n\n    try {\n      // Validate the DTO instance\n      await validateOrReject(dto, { skipMissingProperties, whitelist, forbidNonWhitelisted });\n\n      // Validation successful, update request body with DTO and proceed\n      req.body = dto;\n      next();\n    } catch (errors) {\n      if (Array.isArray(errors)) {\n        // Flatten and format validation errors\n        const formattedErrors = flattenValidationErrors(errors);\n\n        // Create a combined error message string\n        const message = formattedErrors[0];\n\n        // Pass the error message to the next middleware\n        next(new HttpException(422, message));\n      } else {\n        // Pass other errors directly to the next middleware\n        next(errors);\n      }\n    }\n  };\n};\n\n/**\n * Recursively flattens validation errors and constructs detailed error messages\n * including parent property names for better understanding.\n * @param errors Array of validation errors\n * @param parentProperty Optional parent property name\n * @returns Array of formatted error messages\n */\nfunction flattenValidationErrors(errors: ValidationError[], parentProperty = ''): string[] {\n  return errors.flatMap((error: ValidationError) => {\n    // Construct full property name with parent property\n    const propertyName = parentProperty ? `${capitalize(parentProperty)} > ${capitalize(error.property)}` : error.property;\n\n    // Collect error messages for the current property\n    const currentErrorMessages = error.constraints ? Object.values(error.constraints).map((message: string) => `${propertyName}: ${message}`) : [];\n\n    // Recursively handle child errors, if any\n    const childErrorMessages = error.children ? flattenValidationErrors(error.children, propertyName) : [];\n\n    // Return a combined array of current and child error messages\n    return [...currentErrorMessages, ...childErrorMessages];\n  });\n}\n"],"names":["ValidationMiddleware","type","skipMissingProperties","whitelist","forbidNonWhitelisted","req","res","next","dto","plainToInstance","body","validateOrReject","errors","Array","isArray","formattedErrors","flattenValidationErrors","message","HttpException","parentProperty","flatMap","error","propertyName","capitalize","property","currentErrorMessages","constraints","Object","values","map","childErrorMessages","children"],"mappings":";;;;+BAcaA;;;eAAAA;;;kCAdmB;gCACkB;+BAEpB;wBACH;AAUpB,MAAMA,uBAAuB,CAACC,MAAWC,wBAAwB,KAAK,EAAEC,YAAY,KAAK,EAAEC,uBAAuB,KAAK;IAC5H,OAAO,OAAOC,KAAcC,KAAeC;QAEzC,MAAMC,MAAMC,IAAAA,iCAAe,EAACR,MAAMI,IAAIK,IAAI;QAE1C,IAAI;YAEF,MAAMC,IAAAA,gCAAgB,EAACH,KAAK;gBAAEN;gBAAuBC;gBAAWC;YAAqB;YAGrFC,IAAIK,IAAI,GAAGF;YACXD;QACF,EAAE,OAAOK,QAAQ;YACf,IAAIC,MAAMC,OAAO,CAACF,SAAS;gBAEzB,MAAMG,kBAAkBC,wBAAwBJ;gBAGhD,MAAMK,UAAUF,eAAe,CAAC,EAAE;gBAGlCR,KAAK,IAAIW,4BAAa,CAAC,KAAKD;YAC9B,OAAO;gBAELV,KAAKK;YACP;QACF;IACF;AACF;AASA,SAASI,wBAAwBJ,MAAyB,EAAEO,iBAAiB,EAAE;IAC7E,OAAOP,OAAOQ,OAAO,CAAC,CAACC;QAErB,MAAMC,eAAeH,iBAAiB,CAAC,EAAEI,IAAAA,kBAAU,EAACJ,gBAAgB,GAAG,EAAEI,IAAAA,kBAAU,EAACF,MAAMG,QAAQ,EAAE,CAAC,GAAGH,MAAMG,QAAQ;QAGtH,MAAMC,uBAAuBJ,MAAMK,WAAW,GAAGC,OAAOC,MAAM,CAACP,MAAMK,WAAW,EAAEG,GAAG,CAAC,CAACZ,UAAoB,CAAC,EAAEK,aAAa,EAAE,EAAEL,QAAQ,CAAC,IAAI,EAAE;QAG9I,MAAMa,qBAAqBT,MAAMU,QAAQ,GAAGf,wBAAwBK,MAAMU,QAAQ,EAAET,gBAAgB,EAAE;QAGtG,OAAO;eAAIG;eAAyBK;SAAmB;IACzD;AACF"}