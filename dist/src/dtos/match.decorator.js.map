{"version":3,"sources":["../../../src/dtos/match.decorator.ts"],"sourcesContent":["import { registerDecorator, ValidationOptions, ValidatorConstraint, ValidatorConstraintInterface, ValidationArguments } from 'class-validator';\n\n@ValidatorConstraint({ async: false })\nexport class MatchConstraint implements ValidatorConstraintInterface {\n  validate(confirmNewPass: any, args: ValidationArguments) {\n    const [relatedPropertyName] = args.constraints;\n    const relatedValue = (args.object as any)[relatedPropertyName];\n    return confirmNewPass === relatedValue;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return 'Passwords do not match';\n  }\n}\n\nexport function Match(property: string, validationOptions?: ValidationOptions) {\n  return function (object: any, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [property],\n      validator: MatchConstraint,\n    });\n  };\n}\n"],"names":["Match","MatchConstraint","validate","confirmNewPass","args","relatedPropertyName","constraints","relatedValue","object","defaultMessage","async","property","validationOptions","propertyName","registerDecorator","target","constructor","options","validator"],"mappings":";;;;;;;;;;;IAegBA,KAAK;eAALA;;IAZHC,eAAe;eAAfA;;;gCAHgH;;;;;;;AAGtH,IAAA,AAAMA,kBAAN,MAAMA;IACXC,SAASC,cAAmB,EAAEC,IAAyB,EAAE;QACvD,MAAM,CAACC,oBAAoB,GAAGD,KAAKE,WAAW;QAC9C,MAAMC,eAAe,AAACH,KAAKI,MAAM,AAAQ,CAACH,oBAAoB;QAC9D,OAAOF,mBAAmBI;IAC5B;IAEAE,eAAeL,IAAyB,EAAE;QACxC,OAAO;IACT;AACF;;;QAXuBM,OAAO;;;AAavB,SAASV,MAAMW,QAAgB,EAAEC,iBAAqC;IAC3E,OAAO,SAAUJ,MAAW,EAAEK,YAAoB;QAChDC,IAAAA,iCAAiB,EAAC;YAChBC,QAAQP,OAAOQ,WAAW;YAC1BH,cAAcA;YACdI,SAASL;YACTN,aAAa;gBAACK;aAAS;YACvBO,WAAWjB;QACb;IACF;AACF"}