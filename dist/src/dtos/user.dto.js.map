{"version":3,"sources":["../../../src/dtos/user.dto.ts"],"sourcesContent":["import { IsEmail, IsInt, IsOptional, IsString, MinLength, IsNotEmpty, IsPhoneNumber, Min, Validate } from 'class-validator';\nimport { Match } from './match.decorator';\n\n/**\n * DTO for creating a new user.\n * Ensures validation rules are applied for fields like email, name, phoneNo, and password.\n */\nexport class CreateUserDto {\n  @IsEmail()\n  @IsNotEmpty()\n  public email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  public name: string;\n\n  // @IsPhoneNumber('IN')\n  @IsNotEmpty()\n  public phoneNo: string;\n\n  @IsString()\n  @MinLength(6)\n  @IsNotEmpty()\n  public password: string;\n\n  @IsInt()\n  @IsOptional()\n  @Min(0, { message: 'Status must be 0 or 1' })\n  public status?: number;\n}\n\n/**\n * DTO for updating an existing user.\n * Allows partial updates by making all fields optional.\n */\nexport class UpdateUserDto {\n  @IsEmail()\n  @IsOptional()\n  public email?: string;\n\n  @IsString()\n  @IsOptional()\n  public name?: string;\n\n  @IsPhoneNumber(null)\n  @IsOptional()\n  public phoneNo?: string;\n\n  @IsString()\n  @MinLength(6)\n  @IsOptional()\n  public password?: string;\n\n  @IsInt()\n  @IsOptional()\n  public status?: number;\n}\n\n/**\n * DTO for updating the password.\n */\nexport class UpdateUserPasswordDto {\n  @IsString()\n  @IsNotEmpty({ message: 'New password is required' })\n  @MinLength(8, { message: 'Password must be at least 8 characters long' })\n  public newPassword: string;\n\n  @IsString()\n  @IsNotEmpty({ message: 'Confirmation password is required' })\n  @Validate(Match, ['newPassword'], { message: 'Passwords do not match' })\n  public confirmNewPassword: string;\n}\n"],"names":["CreateUserDto","UpdateUserDto","UpdateUserPasswordDto","email","name","phoneNo","password","status","message","newPassword","confirmNewPassword"],"mappings":";;;;;;;;;;;IAOaA,aAAa;eAAbA;;IA4BAC,aAAa;eAAbA;;IA0BAC,qBAAqB;eAArBA;;;gCA7D6F;gCACpF;;;;;;;;;;;;;;;;;;;;;;;AAMf,IAAA,AAAMF,gBAAN,MAAMA;;QACX,uBAEOG,SAFP,KAAA;QAIA,uBAEOC,QAFP,KAAA;QAKA,uBACOC,WADP,KAAA;QAGA,uBAGOC,YAHP,KAAA;QAKA,uBAGOC,UAHP,KAAA;;AAIF;;;;;;;;;;;;;;;;;;;;;;;;;QAFYC,SAAS;;;;AAQd,IAAA,AAAMP,gBAAN,MAAMA;;QACX,uBAEOE,SAFP,KAAA;QAIA,uBAEOC,QAFP,KAAA;QAIA,uBAEOC,WAFP,KAAA;QAIA,uBAGOC,YAHP,KAAA;QAKA,uBAEOC,UAFP,KAAA;;AAGF;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,IAAA,AAAML,wBAAN,MAAMA;;QACX,uBAGOO,eAHP,KAAA;QAKA,uBAGOC,sBAHP,KAAA;;AAIF;;;;QARgBF,SAAS;;;QACPA,SAAS;;;;;;;QAIXA,SAAS;;;QACL;;QAAkBA,SAAS"}