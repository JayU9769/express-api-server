{"version":3,"sources":["../../../src/routes/role.route.ts"],"sourcesContent":["import { Router } from 'express';\nimport { RoleController } from '@/controllers/role.controller';\nimport { CreateRoleDto, UpdateRoleDto } from '@/dtos/role.dto';\nimport { Routes } from '@/interfaces/route.interface';\nimport { ValidationMiddleware } from '@/middlewares/validation.middleware';\nimport { DeleteActionDto, UpdateActionDto } from '@/dtos/global.dto';\nimport { isAuthenticated } from '@/middlewares/auth.middleware';\nimport checkPermission from '@/middlewares/checkPermission.middleware';\n\n/**\n * RoleRoute class handles the routing for role-related API endpoints.\n * It initializes routes for CRUD operations and bulk actions on roles.\n */\nexport class RoleRoute implements Routes {\n  public path = '/roles'; // Base path for all role-related routes\n  public router = Router(); // Express router instance to define routes\n  public role = new RoleController(); // Controller to handle role business logic\n\n  constructor() {\n    // Initialize the routes when the RoleRoute class is instantiated\n    this.initializeRoutes();\n  }\n\n  /**\n   * Initializes all routes for roles.\n   * Includes endpoints for creating, updating, deleting, and fetching roles,\n   * as well as handling bulk update actions.\n   */\n  private initializeRoutes() {\n    // Route to get all roles with optional pagination, sorting, and filtering\n    this.router.get(`${this.path}`, isAuthenticated, checkPermission('role-view'), this.role.getRoles);\n\n    // Route to get a specific role by its ID\n    this.router.get(`${this.path}/:id`, isAuthenticated, checkPermission('role-view'), this.role.getRoleById);\n\n    // Route to create a new role, with validation for the incoming data\n    this.router.post(`${this.path}`, isAuthenticated, checkPermission('role-create'), ValidationMiddleware(CreateRoleDto), this.role.createRole);\n\n    // Route to update an existing role by its ID, with validation for the incoming data\n    this.router.put(\n      `${this.path}/:id`,\n      isAuthenticated,\n      checkPermission('role-update'),\n      ValidationMiddleware(UpdateRoleDto, false, true),\n      this.role.updateRole,\n    );\n\n    // Route to delete one or more roles by their IDs, with validation for the incoming IDs\n    this.router.delete(`${this.path}`, isAuthenticated, checkPermission('role-delete'), ValidationMiddleware(DeleteActionDto), this.role.deleteRole);\n\n    // Route to update multiple roles using a bulk action, with validation for the action data\n    this.router.post(\n      `${this.path}/update-action`,\n      isAuthenticated,\n      checkPermission('role-update'),\n      ValidationMiddleware(UpdateActionDto),\n      this.role.updateAction,\n    );\n  }\n}\n"],"names":["RoleRoute","initializeRoutes","router","get","path","isAuthenticated","checkPermission","role","getRoles","getRoleById","post","ValidationMiddleware","CreateRoleDto","createRole","put","UpdateRoleDto","updateRole","delete","DeleteActionDto","deleteRole","UpdateActionDto","updateAction","constructor","Router","RoleController"],"mappings":";;;;+BAaaA;;;eAAAA;;;yBAbU;gCACQ;yBACc;sCAER;2BACY;gCACjB;kFACJ;;;;;;;;;;;;;;;;;;;AAMrB,IAAA,AAAMA,YAAN,MAAMA;IAeHC,mBAAmB;QAEzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAEC,+BAAe,EAAEC,IAAAA,kCAAe,EAAC,cAAc,IAAI,CAACC,IAAI,CAACC,QAAQ;QAGjG,IAAI,CAACN,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,EAAEC,+BAAe,EAAEC,IAAAA,kCAAe,EAAC,cAAc,IAAI,CAACC,IAAI,CAACE,WAAW;QAGxG,IAAI,CAACP,MAAM,CAACQ,IAAI,CAAC,CAAC,EAAE,IAAI,CAACN,IAAI,CAAC,CAAC,EAAEC,+BAAe,EAAEC,IAAAA,kCAAe,EAAC,gBAAgBK,IAAAA,0CAAoB,EAACC,sBAAa,GAAG,IAAI,CAACL,IAAI,CAACM,UAAU;QAG3I,IAAI,CAACX,MAAM,CAACY,GAAG,CACb,CAAC,EAAE,IAAI,CAACV,IAAI,CAAC,IAAI,CAAC,EAClBC,+BAAe,EACfC,IAAAA,kCAAe,EAAC,gBAChBK,IAAAA,0CAAoB,EAACI,sBAAa,EAAE,OAAO,OAC3C,IAAI,CAACR,IAAI,CAACS,UAAU;QAItB,IAAI,CAACd,MAAM,CAACe,MAAM,CAAC,CAAC,EAAE,IAAI,CAACb,IAAI,CAAC,CAAC,EAAEC,+BAAe,EAAEC,IAAAA,kCAAe,EAAC,gBAAgBK,IAAAA,0CAAoB,EAACO,0BAAe,GAAG,IAAI,CAACX,IAAI,CAACY,UAAU;QAG/I,IAAI,CAACjB,MAAM,CAACQ,IAAI,CACd,CAAC,EAAE,IAAI,CAACN,IAAI,CAAC,cAAc,CAAC,EAC5BC,+BAAe,EACfC,IAAAA,kCAAe,EAAC,gBAChBK,IAAAA,0CAAoB,EAACS,0BAAe,GACpC,IAAI,CAACb,IAAI,CAACc,YAAY;IAE1B;IAxCAC,aAAc;QAJd,uBAAOlB,QAAO;QACd,uBAAOF,UAASqB,IAAAA,eAAM;QACtB,uBAAOhB,QAAO,IAAIiB,8BAAc;QAI9B,IAAI,CAACvB,gBAAgB;IACvB;AAsCF"}