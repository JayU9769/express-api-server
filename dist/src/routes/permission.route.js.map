{"version":3,"sources":["../../../src/routes/permission.route.ts"],"sourcesContent":["import { Router } from 'express';\nimport { Routes } from '@/interfaces/route.interface';\nimport { isAuthenticated } from '@/middlewares/auth.middleware';\nimport { PermissionController } from '@/controllers/permission.controller';\nimport { ValidationMiddleware } from '@/middlewares/validation.middleware';\nimport { UpdatePermissionRequestDto } from '@/dtos/permission.dto';\nimport checkPermission from '@/middlewares/checkPermission.middleware';\n\n/**\n * PermissionRoute class handles the routing for permission-related API endpoints.\n * It initializes routes for CRUD operations and bulk actions on permissions.\n */\nexport class PermissionRoute implements Routes {\n  public path = '/permissions'; // Base path for all permission-related routes\n  public router = Router(); // Express router instance to define routes\n  public permission = new PermissionController(); // Controller to handle permission business logic\n\n  constructor() {\n    // Initialize the routes when the PermissionRoute class is instantiated\n    this.initializeRoutes();\n  }\n\n  /**\n   * Initializes all routes for permissions.\n   * Includes endpoints for creating, updating, deleting, and fetching permissions,\n   * as well as handling bulk update actions.\n   */\n  private initializeRoutes() {\n    // Route to get all permissions with optional pagination, sorting, and filtering\n    this.router.get(`${this.path}`, isAuthenticated, checkPermission('admin-permission'), this.permission.getPermissions);\n    this.router.post(\n      `${this.path}/update-permission`,\n      isAuthenticated,\n      checkPermission('admin-permission'),\n      ValidationMiddleware(UpdatePermissionRequestDto),\n      this.permission.updatePermission,\n    );\n  }\n}\n"],"names":["PermissionRoute","initializeRoutes","router","get","path","isAuthenticated","checkPermission","permission","getPermissions","post","ValidationMiddleware","UpdatePermissionRequestDto","updatePermission","constructor","Router","PermissionController"],"mappings":";;;;+BAYaA;;;eAAAA;;;yBAZU;gCAES;sCACK;sCACA;+BACM;kFACf;;;;;;;;;;;;;;;;;;;AAMrB,IAAA,AAAMA,kBAAN,MAAMA;IAeHC,mBAAmB;QAEzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,CAAC,EAAEC,+BAAe,EAAEC,IAAAA,kCAAe,EAAC,qBAAqB,IAAI,CAACC,UAAU,CAACC,cAAc;QACpH,IAAI,CAACN,MAAM,CAACO,IAAI,CACd,CAAC,EAAE,IAAI,CAACL,IAAI,CAAC,kBAAkB,CAAC,EAChCC,+BAAe,EACfC,IAAAA,kCAAe,EAAC,qBAChBI,IAAAA,0CAAoB,EAACC,yCAA0B,GAC/C,IAAI,CAACJ,UAAU,CAACK,gBAAgB;IAEpC;IApBAC,aAAc;QAJd,uBAAOT,QAAO;QACd,uBAAOF,UAASY,IAAAA,eAAM;QACtB,uBAAOP,cAAa,IAAIQ,0CAAoB;QAI1C,IAAI,CAACd,gBAAgB;IACvB;AAkBF"}