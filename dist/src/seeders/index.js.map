{"version":3,"sources":["../../../src/seeders/index.ts"],"sourcesContent":["import { number, select } from '@inquirer/prompts';\n\nasync function seed() {\n  try {\n    const entity = await select({\n      message: 'What would you like to seed?',\n      choices: [\n        {\n          name: 'Users',\n          value: 'users',\n          description: 'Create Dummy users',\n        },\n        {\n          name: 'Admins',\n          value: 'admins',\n          description: 'Create Dummy Admins',\n        },\n      ],\n    });\n\n    const countNumber = await number({\n      message: 'How many records would you like to create?',\n    });\n\n    // Dynamically import the correct seeder module\n    const seederMap: { [key: string]: string } = {\n      users: './userSeeder',\n      admins: './adminSeeder',\n    };\n\n    const seederModule = seederMap[entity];\n    if (seederModule) {\n      const { seed } = await import(seederModule);\n      await seed(countNumber);\n    } else {\n      console.error('Unknown entity selected.');\n    }\n  } catch (error) {\n    console.error('Unable to connect to the database:', error);\n  }\n}\n\nseed();\n"],"names":["seed","entity","select","message","choices","name","value","description","countNumber","number","seederMap","users","admins","seederModule","console","error"],"mappings":";;;;yBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE/B,eAAeA;IACb,IAAI;QACF,MAAMC,SAAS,MAAMC,IAAAA,eAAM,EAAC;YAC1BC,SAAS;YACTC,SAAS;gBACP;oBACEC,MAAM;oBACNC,OAAO;oBACPC,aAAa;gBACf;gBACA;oBACEF,MAAM;oBACNC,OAAO;oBACPC,aAAa;gBACf;aACD;QACH;QAEA,MAAMC,cAAc,MAAMC,IAAAA,eAAM,EAAC;YAC/BN,SAAS;QACX;QAGA,MAAMO,YAAuC;YAC3CC,OAAO;YACPC,QAAQ;QACV;QAEA,MAAMC,eAAeH,SAAS,CAACT,OAAO;QACtC,IAAIY,cAAc;YAChB,MAAM,EAAEb,IAAI,EAAE,GAAG,MAAM,gBAAOa,gEAAP;YACvB,MAAMb,KAAKQ;QACb,OAAO;YACLM,QAAQC,KAAK,CAAC;QAChB;IACF,EAAE,OAAOA,OAAO;QACdD,QAAQC,KAAK,CAAC,sCAAsCA;IACtD;AACF;AAEAf"}