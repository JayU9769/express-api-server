{"version":3,"sources":["../../../src/role-permissions/authMiddleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport RolePermissionService from './RolePermissionService';\nimport { Admin, User } from '@prisma/client';\nimport { IAuthUser } from '@/interfaces/global.interface';\n\nconst rolePermissionService = new RolePermissionService();\n\n/**\n * Middleware to check if user has a specific role.\n */\nexport function requireRole(roleName: string) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    const user = req.user as IAuthUser; // Assuming req.user has user information\n    if (!user) {\n      return res.status(401).json({ message: 'Unauthorized' });\n    }\n\n    const hasRole = await rolePermissionService.hasRole(user.id, roleName, 'user');\n    if (!hasRole) {\n      return res.status(403).json({ message: 'Forbidden: Role required' });\n    }\n\n    next();\n  };\n}\n\n/**\n * Middleware to check if user has a specific permission.\n */\nexport function requirePermission(permissionName: string) {\n  return async (req: Request, res: Response, next: NextFunction) => {\n    const user = req.user as Admin | User; // Assuming req.user has user information\n    if (!user) {\n      return res.status(401).json({ message: 'Unauthorized' });\n    }\n\n    const hasPermission = await rolePermissionService.hasPermission(user.id, permissionName, 'user');\n    if (!hasPermission) {\n      return res.status(403).json({ message: 'Forbidden: Permission required' });\n    }\n\n    next();\n  };\n}\n"],"names":["requirePermission","requireRole","rolePermissionService","RolePermissionService","roleName","req","res","next","user","status","json","message","hasRole","id","permissionName","hasPermission"],"mappings":";;;;;;;;;;;IA6BgBA,iBAAiB;eAAjBA;;IAnBAC,WAAW;eAAXA;;;8EATkB;;;;;;AAIlC,MAAMC,wBAAwB,IAAIC,8BAAqB;AAKhD,SAASF,YAAYG,QAAgB;IAC1C,OAAO,OAAOC,KAAcC,KAAeC;QACzC,MAAMC,OAAOH,IAAIG,IAAI;QACrB,IAAI,CAACA,MAAM;YACT,OAAOF,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAe;QACxD;QAEA,MAAMC,UAAU,MAAMV,sBAAsBU,OAAO,CAACJ,KAAKK,EAAE,EAAET,UAAU;QACvE,IAAI,CAACQ,SAAS;YACZ,OAAON,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAA2B;QACpE;QAEAJ;IACF;AACF;AAKO,SAASP,kBAAkBc,cAAsB;IACtD,OAAO,OAAOT,KAAcC,KAAeC;QACzC,MAAMC,OAAOH,IAAIG,IAAI;QACrB,IAAI,CAACA,MAAM;YACT,OAAOF,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAe;QACxD;QAEA,MAAMI,gBAAgB,MAAMb,sBAAsBa,aAAa,CAACP,KAAKK,EAAE,EAAEC,gBAAgB;QACzF,IAAI,CAACC,eAAe;YAClB,OAAOT,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAiC;QAC1E;QAEAJ;IACF;AACF"}