{"version":3,"sources":["../../src/server.ts"],"sourcesContent":["import 'reflect-metadata'; // Enables reflection for decorators and metadata management\nimport 'tsconfig-paths/register'; // Allows TypeScript path aliases (from tsconfig) to work in Node.js\nimport { App } from '@/app'; // Main application class\nimport { ValidateEnv } from '@/utils/validateEnv'; // Utility function for validating environment variables\nimport { HomeRoute } from '@/routes/home.route'; // Route for the home endpoint\nimport { UserRoute } from '@/routes/user.route'; // Route for user-related endpoints\nimport { AdminRoute } from '@/routes/admin.route'; // Route for admin-related endpoints\nimport { RoleRoute } from '@/routes/role.route';\nimport { PermissionRoute } from '@/routes/permission.route'; // Route for role-related endpoints\n\n// Validate that required environment variables are set\nValidateEnv();\n\n/**\n * Initialize the Express application with the specified routes.\n * These routes will be used by the application to handle different API endpoints.\n */\nconst app = new App([\n  new HomeRoute(), // Home-related API routes\n  new RoleRoute(), // Role-related API routes\n  new PermissionRoute(), // Permission-related API routes\n  new AdminRoute(), // Admin-related API routes\n  new UserRoute(), // User-related API routes\n]);\n\n// Start the application and listen on the configured port\napp.listen();\n"],"names":["ValidateEnv","app","App","HomeRoute","RoleRoute","PermissionRoute","AdminRoute","UserRoute","listen"],"mappings":";;;;QAAO;QACA;qBACa;6BACQ;2BACF;2BACA;4BACC;2BACD;iCACM;AAGhCA,IAAAA,wBAAW;AAMX,MAAMC,MAAM,IAAIC,QAAG,CAAC;IAClB,IAAIC,oBAAS;IACb,IAAIC,oBAAS;IACb,IAAIC,gCAAe;IACnB,IAAIC,sBAAU;IACd,IAAIC,oBAAS;CACd;AAGDN,IAAIO,MAAM"}